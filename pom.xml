<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
							 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
	
    <groupId>com.yuli.cloud</groupId>
    <artifactId>jaxrs-v-spring</artifactId>
    <name>Cloud Examples JAX-RS v Spring</name>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <properties>
		<java.version>1.8</java.version>
        <jetty.version>6.1.26</jetty.version>
        <slf4j.version>1.6.4</slf4j.version>
        <lombok.version>1.18.4</lombok.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modules>
        <module>common</module>
		<module>jersey</module>
        <!-- module>spring-boot</module>
        <module>spring-jaxrs</module -->
    </modules>

    <dependencyManagement>
	
        <dependencies>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.1.2</version>
                <scope>runtime</scope>
            </dependency>
			
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet.servlet-api</artifactId>
                <version>3.0.1</version>
                <scope>provided</scope>
            </dependency>
			
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
			
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
			
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.16</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
		
    </dependencyManagement>

    <build>

        <pluginManagement>

            <plugins>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <!--<path>-->
                            <!--<groupId>org.mapstruct</groupId>-->
                            <!--<artifactId>mapstruct-processor</artifactId>-->
                            <!--<version>${org.mapstruct.version}</version>-->
                            <!--</path>-->
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <compilerArg>
                                -Amapstruct.defaultComponentModel=spring
                            </compilerArg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <!--
                    By default, the Failsafe Plugin will automatically include all
                    test classes with the following wildcard patterns:
                    "**/IT*.java" - includes all of its subdirectories and all java
                                    filenames that start with "IT"
                    "**/*IT.java" - includes all of its subdirectories and all java
                                    filenames that end with "IT"
                    "**/*ITCase.java" - includes all of its subdirectories and all
                                    java filenames that end with "ITCase".
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <includes>
                            <include>**/*IT.java</include>
                        </includes>
                        <additionalClasspathElements>
                            <additionalClasspathElement>
                                ${basedir}/target/classes
                            </additionalClasspathElement>
                        </additionalClasspathElements>
                        <parallel>none</parallel>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>

        </pluginManagement>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

        </plugins>

    </build>

</project>